@page "/edit/{trainId}"
@inject HttpClient Http
@using  Trains.Client.ViewModels
@inject ITrainsViewModel TrainsViewModel
@inject NavigationManager NavigationManager

<h1>Edit</h1>
<h3>Train</h3>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@TrainsViewModel.Train" OnValidSubmit="@EditCurrentTrain">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <InputText for="Name" class="form-control" @bind-Value="@TrainsViewModel.Train.Name" />
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label">Gender</label>
                <InputSelect asp-for="Gender" class="form-control" @bind-Value="@TrainsViewModel.Train.LicensePlate">
                    <option value="">-- Select Gender --</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                </InputSelect>
            </div>
            <div class="form-group">
                <label asp-for="Department" class="control-label">Department</label>
                <InputText asp-for="Department" class="form-control" @bind-Value="@TrainsViewModel.Train.Company" />
            </div>
            <div class="form-group">
                <label asp-for="City" class="control-label">City</label>
                <InputText asp-for="City" class="form-control" @bind-Value="@TrainsViewModel.Train.HomeStation" />
            </div>
            <div class="form-group">
                <button class="btn" type="submit">Submit</button>
                <button class="btn" @onclick="@Cancel">Cancel</button>
            </div>
        </EditForm>
    </div>
</div>

@functions {

    [Parameter]
    public string trainId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await TrainsViewModel.GetTrainAsync(new Guid(trainId));
    }

    protected async Task EditCurrentTrain()
    {
        await TrainsViewModel.EditTrainAsync();
        await Task.Delay(200);
        NavigationManager.NavigateTo("/trainsdata");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/trainsdata");
    }
}
